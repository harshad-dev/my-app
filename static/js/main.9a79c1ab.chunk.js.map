{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","id","onClick","toggleMode","type","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newSpace","split","join","length","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9a79c1ab.chunk.js","sourcesContent":["import React from 'react'\r\n// import propTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n  <a className=\"navbar-brand ps-3\" href=\"#.\">{ props.title }</a>\r\n  {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button> */}\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#.\">Home</a>\r\n      </li>\r\n      {/* <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n      </li> */}\r\n    </ul>\r\n    \r\n  </div>\r\n  <div className=\"pe-3\">\r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label text-style={{color: props.mode==='dark'?'dark':'light'}}\" htmlFor=\"flexSwitchCheckDefault\" >Enable dark mode</label>\r\n  </div>\r\n</div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\")\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\")\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \" \";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\")\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById('myBox');\r\n    text.select();\r\n    text.setSelectionRange(0,99999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\")\r\n  };\r\n\r\n  const handleExtraSpaces=()=>{\r\n    let newSpace = text.split(/([ ])+/);\r\n    setText(newSpace.join(\"\"));\r\n    props.showAlert(\"Extra Spaces Removes\",\"success\")\r\n  }\r\n  \r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  return (\r\n    <>\r\n    <div className=\"container mt-3\" style={{color: props.mode==='dark'?'#fff':'#000'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"form-group\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange}\r\n        style={{backgroundColor: props.mode==='dark'?'#000':'#fff',color: props.mode==='dark'?'#fff':'#000'}}\r\n          id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleUpClick}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleLoClick}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleClearClick}>\r\n        Clear\r\n      </button>\r\n      <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleCopy}>\r\n        Copy\r\n      </button>\r\n      <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleExtraSpaces}>\r\n        Remove Extra Spaces\r\n      </button>\r\n    </div>\r\n    <div className=\"container mt-5\" style={{color: props.mode==='dark'?'#fff':'#000'}}>\r\n      <h2>Your text Summary</h2>\r\n      <p>\"{text.split(\" \").length} <b>Words</b>\" and \"{text.length} <b>Character</b>\" </p>\r\n      <p> {0.008 * text.split(\" \").length} <b>Minutes</b> </p>\r\n      <br /><br />\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something on text box\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{props.alert.type}</strong> {props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Component/Navbar\";\nimport TextForm from \"./Component/TextForm\";\n// import About from \"./Component/About\";\nimport Alert from \"./Component/Alert\";\nimport { useState } from \"react\";\n// import { BrowserRouter as Router, Switch,Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(\"null\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#000\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"Text Utilities - Dark Mode\";\n      setInterval(() => {\n        document.title = \"Text Utilities is Amazing\";\n      }, 1000);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"Text Utilities - Light Mode\";\n      setInterval(() => {\n        document.title = \"Text Utilities is Great\";\n      }, 1500);\n    }\n  };\n  return (\n    <>\n\n      {/* <Router> */}\n      <Navbar title={`Dipa Text Utilities`} mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n      <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert}/>\n          {/* <Routes>\n            <Route path=\"/about\" element={<About />}>\n            </Route>\n            <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes> */}\n        </div>\n      {/* </Router> */}\n      {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}